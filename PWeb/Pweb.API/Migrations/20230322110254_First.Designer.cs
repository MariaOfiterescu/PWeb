// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pweb.API.Data;

#nullable disable

namespace Pweb.API.Migrations
{
    [DbContext(typeof(PWebDBContext))]
    [Migration("20230322110254_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Pweb.API.Models.Domain.Actori", b =>
                {
                    b.Property<int>("actorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("actorid"));

                    b.Property<string>("datanastere")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nationalitate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("prenume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("actorid");

                    b.ToTable("actori");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Director", b =>
                {
                    b.Property<int>("directorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("directorid"));

                    b.Property<string>("nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("prenume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("varsta")
                        .HasColumnType("integer");

                    b.HasKey("directorid");

                    b.ToTable("director");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Filme", b =>
                {
                    b.Property<int>("filmid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("filmid"));

                    b.Property<int>("actorid")
                        .HasColumnType("integer");

                    b.Property<int>("anaparitie")
                        .HasColumnType("integer");

                    b.Property<string>("categorievarsta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("descriere")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("directorid1")
                        .HasColumnType("integer");

                    b.Property<string>("durata")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("genid")
                        .HasColumnType("integer");

                    b.Property<int>("scenariuid1")
                        .HasColumnType("integer");

                    b.Property<string>("titlu")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("filmid");

                    b.HasIndex("actorid");

                    b.HasIndex("directorid1");

                    b.HasIndex("genid");

                    b.HasIndex("scenariuid1")
                        .IsUnique();

                    b.ToTable("filme");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.FilmeActori", b =>
                {
                    b.Property<int>("filmid")
                        .HasColumnType("integer");

                    b.Property<int>("actorid")
                        .HasColumnType("integer");

                    b.HasKey("filmid", "actorid");

                    b.HasIndex("actorid");

                    b.ToTable("filmeactori");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.FilmeGenuri", b =>
                {
                    b.Property<int>("filmid")
                        .HasColumnType("integer");

                    b.Property<int>("genid")
                        .HasColumnType("integer");

                    b.HasKey("filmid", "genid");

                    b.HasIndex("genid");

                    b.ToTable("filmegenuri");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Genuri", b =>
                {
                    b.Property<int>("genid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("genid"));

                    b.Property<string>("numegen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("genid");

                    b.ToTable("genuri");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Scenariu", b =>
                {
                    b.Property<int>("scenariuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("scenariuid"));

                    b.Property<string>("nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("scenariuid");

                    b.ToTable("scenariu");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Scriitori", b =>
                {
                    b.Property<int>("scriitorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("scriitorid"));

                    b.Property<string>("nume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("prenume")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("varsta")
                        .HasColumnType("integer");

                    b.HasKey("scriitorid");

                    b.ToTable("scriitori");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.ScriitoriScenariu", b =>
                {
                    b.Property<int>("scriitorid")
                        .HasColumnType("integer");

                    b.Property<int>("scenariuid")
                        .HasColumnType("integer");

                    b.HasKey("scriitorid", "scenariuid");

                    b.HasIndex("scenariuid");

                    b.ToTable("scriitoriscenariu");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Filme", b =>
                {
                    b.HasOne("Pweb.API.Models.Domain.Actori", "Actor")
                        .WithMany()
                        .HasForeignKey("actorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pweb.API.Models.Domain.Director", "director")
                        .WithMany("filme")
                        .HasForeignKey("directorid1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pweb.API.Models.Domain.Genuri", "Gen")
                        .WithMany()
                        .HasForeignKey("genid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pweb.API.Models.Domain.Scenariu", "scenariu")
                        .WithOne("filme")
                        .HasForeignKey("Pweb.API.Models.Domain.Filme", "scenariuid1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Gen");

                    b.Navigation("director");

                    b.Navigation("scenariu");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.FilmeActori", b =>
                {
                    b.HasOne("Pweb.API.Models.Domain.Actori", "Actori")
                        .WithMany("filmeactori")
                        .HasForeignKey("actorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pweb.API.Models.Domain.Filme", "Filme")
                        .WithMany("filmeactori")
                        .HasForeignKey("filmid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actori");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.FilmeGenuri", b =>
                {
                    b.HasOne("Pweb.API.Models.Domain.Filme", "Filme")
                        .WithMany("filmegenuri")
                        .HasForeignKey("filmid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pweb.API.Models.Domain.Genuri", "Genuri")
                        .WithMany("filmegenuri")
                        .HasForeignKey("genid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Filme");

                    b.Navigation("Genuri");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.ScriitoriScenariu", b =>
                {
                    b.HasOne("Pweb.API.Models.Domain.Scenariu", "Scenariu")
                        .WithMany("scriitoriscenariu")
                        .HasForeignKey("scenariuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pweb.API.Models.Domain.Scriitori", "Scriitori")
                        .WithMany("scriitoriscenariu")
                        .HasForeignKey("scriitorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scenariu");

                    b.Navigation("Scriitori");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Actori", b =>
                {
                    b.Navigation("filmeactori");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Director", b =>
                {
                    b.Navigation("filme");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Filme", b =>
                {
                    b.Navigation("filmeactori");

                    b.Navigation("filmegenuri");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Genuri", b =>
                {
                    b.Navigation("filmegenuri");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Scenariu", b =>
                {
                    b.Navigation("filme")
                        .IsRequired();

                    b.Navigation("scriitoriscenariu");
                });

            modelBuilder.Entity("Pweb.API.Models.Domain.Scriitori", b =>
                {
                    b.Navigation("scriitoriscenariu");
                });
#pragma warning restore 612, 618
        }
    }
}
